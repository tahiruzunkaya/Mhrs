// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mhrs.Data.Concrete.EfCore;

namespace mhrs.Data.Migrations
{
    [DbContext(typeof(MhrsContext))]
    [Migration("20190510022858_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mhrs.Entity.Doktor", b =>
                {
                    b.Property<int>("DoktorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brans");

                    b.Property<int>("KullaniciId");

                    b.Property<int>("PoliklinikId");

                    b.Property<DateTime>("SaveDate");

                    b.HasKey("DoktorId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("PoliklinikId");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("mhrs.Entity.Favori", b =>
                {
                    b.Property<int>("FavoriId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoktorId");

                    b.Property<int>("KullaniciId");

                    b.Property<DateTime>("SaveDate");

                    b.HasKey("FavoriId");

                    b.HasIndex("DoktorId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Favoriler");
                });

            modelBuilder.Entity("mhrs.Entity.Hastane", b =>
                {
                    b.Property<int>("HastaneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres");

                    b.Property<string>("HastaneAdi");

                    b.Property<DateTime>("SaveDate");

                    b.HasKey("HastaneId");

                    b.ToTable("Hastaneler");
                });

            modelBuilder.Entity("mhrs.Entity.Kisitlama", b =>
                {
                    b.Property<int>("KisitlamaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoktorId");

                    b.Property<DateTime>("KisitTarihi");

                    b.Property<DateTime>("SaveTime");

                    b.HasKey("KisitlamaId");

                    b.HasIndex("DoktorId");

                    b.ToTable("Kisitlamalar");
                });

            modelBuilder.Entity("mhrs.Entity.Kullanici", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<bool>("Cinsiyet");

                    b.Property<DateTime>("DogumTarihi");

                    b.Property<string>("Email");

                    b.Property<int>("RollerId");

                    b.Property<DateTime>("SaveDate");

                    b.Property<string>("Sifre");

                    b.Property<string>("Soyad");

                    b.Property<long>("TcKimlikNo");

                    b.Property<long>("Telefon");

                    b.HasKey("KullaniciId");

                    b.HasIndex("RollerId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("mhrs.Entity.Poliklinik", b =>
                {
                    b.Property<int>("PoliklinikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HastaneId");

                    b.Property<string>("PoliklinikAdi");

                    b.Property<DateTime>("SaveDate");

                    b.HasKey("PoliklinikId");

                    b.HasIndex("HastaneId");

                    b.ToTable("Poliklinikler");
                });

            modelBuilder.Entity("mhrs.Entity.Randevu", b =>
                {
                    b.Property<int>("RandevuId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoktorId");

                    b.Property<int>("KullaniciId");

                    b.Property<DateTime>("SaveDate");

                    b.Property<DateTime>("Tarihi");

                    b.HasKey("RandevuId");

                    b.HasIndex("DoktorId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("mhrs.Entity.Roller", b =>
                {
                    b.Property<int>("RollerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RolAdi");

                    b.HasKey("RollerId");

                    b.ToTable("Rollers");
                });

            modelBuilder.Entity("mhrs.Entity.Doktor", b =>
                {
                    b.HasOne("mhrs.Entity.Kullanici", "Kullanici")
                        .WithMany("Doktorlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mhrs.Entity.Poliklinik", "Poliklinik")
                        .WithMany("Doktorlar")
                        .HasForeignKey("PoliklinikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mhrs.Entity.Favori", b =>
                {
                    b.HasOne("mhrs.Entity.Doktor", "Doktor")
                        .WithMany()
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mhrs.Entity.Kullanici", "Kullanici")
                        .WithMany("Favoriler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mhrs.Entity.Kisitlama", b =>
                {
                    b.HasOne("mhrs.Entity.Doktor", "Doktor")
                        .WithMany("Kisitlamalar")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mhrs.Entity.Kullanici", b =>
                {
                    b.HasOne("mhrs.Entity.Roller", "Roller")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RollerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mhrs.Entity.Poliklinik", b =>
                {
                    b.HasOne("mhrs.Entity.Hastane", "Hastane")
                        .WithMany("Poliklinikler")
                        .HasForeignKey("HastaneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mhrs.Entity.Randevu", b =>
                {
                    b.HasOne("mhrs.Entity.Doktor", "Doktor")
                        .WithMany("Randevular")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mhrs.Entity.Kullanici", "Kullanici")
                        .WithMany("Randevular")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
